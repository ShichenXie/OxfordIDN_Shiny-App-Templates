{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(shinyBS)\n\nshinyApp(\n  ui =\n    fluidPage(\n      sidebarLayout(\n        sidebarPanel(HTML(\"This button will open Panel 1 using updateCollapse.\"),\n                     actionButton(\"p1Button\", \"Push Me!\"),\n                     selectInput(\"styleSelect\", \"Select style for Panel 1\",\n                                 c(\"default\", \"primary\", \"danger\", \"warning\", \"info\", \"success\"))\n        ),\n        mainPanel(\n          bsCollapse(id = \"collapseExample\", open = \"Panel 2\",\n                     bsCollapsePanel(\"Panel 1\", \"This is a panel with just text \",\n                                     \"and has the default style. You can change the style in \",\n                                     \"the sidebar.\", style = \"info\"),\n                     bsCollapsePanel(\"Panel 2\", \"This panel has a generic plot. \",\n                                     \"and a 'success' style.\", plotOutput(\"genericPlot\"), style = \"success\")\n          )\n        )\n      )\n    ),\n  server =\n    function(input, output, session) {\n      output$genericPlot <- renderPlot(plot(rnorm(100)))\n      observeEvent(input$p1Button, ({\n        updateCollapse(session, \"collapseExample\", open = \"Panel 1\")\n      }))\n      observeEvent(input$styleSelect, ({\n        updateCollapse(session, \"collapseExample\", style = list(\"Panel 1\" = input$styleSelect))\n      }))\n    }\n)\n",
    "created" : 1468445439806.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1045468421",
    "id" : "4006847D",
    "lastKnownWriteTime" : 1468445420,
    "last_content_update" : 1468445441885,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}